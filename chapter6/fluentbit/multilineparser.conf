[PARSER]
    name myRandomParserWeWontUse
    format regex
    regex ^(?<INT>[^ ]+) (?<FLOAT>[^ ]+) (?<BOOL>[^ ]+) (?<STRING>.+)$    

[MULTILINE_PARSER]
    name multiline_Demo
    type regex
    key_content log
    flush_timeout 1000
    #
    # rules |   state name  | regex pattern                  | next state
    # ------|---------------|--------------------------------------------
    rule     "start_state"   "^[{].*"                          "cont"
    rule     "cont"          "^[-].*"                          "cont"

[MULTILINE_PARSER]
    name          multiline_Demo2
    type          regex
    #key_content   log
    #
    # rules |   state name  | regex pattern                  | next state
    # ------|---------------|--------------------------------------------
    rule     "start_state"   "^[{}].*"                          "cont"
    rule     "cont"          "^(?!END)"                         "cont"
    # Expressing a negative is a lot harder e.g. accespting any line until END is found