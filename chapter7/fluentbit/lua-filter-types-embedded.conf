[SERVICE]
  flush 1

[INPUT]
    name dummy
    dummy {   "time": "12/May/2023:08:05:52 +0000",   "remote_ip": "10.4.72.163",   "remoteuser": "-",   "request": {     "verb": "GET",     "path": " /downloads/product_2",     "protocol": "HTTP",     "version": "1.1"   },   "response": 304}
    tag dummy1

[INPUT]
    Name dummy
    dummy    {   "time": "12/June/2023:08:05:52 +0000",   "remote_ip": "10.4.72.163",   "remote_user": "-",   "request": {     "verb": "GET",     "path": " /downloads/product_2",     "protocol": "HTTP",     "version": "1.1"   },   "response": 304, "another_root_element" : "horrah", "why" : ["just"," so", " the counter"," varies"]}
    tag dummy2  

[FILTER]
    name lua
    match *
    script ./attribute-types.lua
    call cb_displayDataAndTypes
    time_as_table true
    #protected_mode true
    code  local function printDetails(record, indent)  counter = 0 for key, value in pairs(record) do elementType = type(value)    if (elementType == "table") then      print(string.format("%s { %s = ", indent, key))      printDetails(value, indent .. " ")      print("}")    else      print(string.format("%s %s = %s --> %s", indent, key, tostring(value), elementType))    end  end end  function cb_displayDataAndTypes(tag, timestamp, record) code = 0  if (type(timestamp) == "table") then    print(tag, ":", timestamp['sec'], " . ", timestamp['nsec'])  else    print(tag, "  ", timestamp)  end  printDetails(record, "")  return code, timestamp, record end


[OUTPUT]
    name stdout
    match * 